version: "3.9"
services:
  statsd-exporter:
    extends:
      file: docker-compose.yml
      service: statsd-exporter
    command:
      - --statsd.relay.address=datadog-agent:8125
  datadog-agent:
    image: 'datadog/agent:7.31.1'
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_LOGS_CONFIG_USE_HTTP=true
      - DD_CONTAINER_EXCLUDE_LOGS=name:datadog-agent
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    ports:
      - 8125:8125/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - type: bind
        source: configs/datadog/gunicorn/conf.yaml
        target: /etc/datadog-agent/conf.d/gunicorn.d/conf.yaml
      - type: volume
        source: gunicorn_logs
        target: /var/log/gunicorn
        read_only: true
  myapp:
    extends:
      file: docker-compose.yml
      service: myapp
    volumes:
      - type: volume
        source: gunicorn_logs
        target: /var/log/gunicorn
      - type: bind
        source: ./web/myapp/gunicorn-log-to-disk.conf.py
        target: /app/gunicorn.conf.py
  db:
    extends:
      file: docker-compose.yml
      service: db
    depends_on:
      - datadog-agent
    labels:
      com.datadoghq.ad.check_names: '["mysql"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":3306,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "mysql", "service": "db"}]'
  mock-elb:
    extends:
      file: docker-compose.yml
      service: mock-elb
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:80/nginx_status/"}]'
      com.datadoghq.ad.logs: '[{"source":"nginx","service":"mock-elb"}]'

volumes:
  dbdata:
  gunicorn_logs:
