version: "3.9"
services:
  statsd-exporter:
    extends:
      file: docker-compose.yml
      service: statsd-exporter
  datadog-agent:
    image: 'datadog/agent:7.31.1'
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOCKER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS='env:dd101-dev'
      - DD_HOSTNAME=dd101-dev-host
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
    ports:
      - 8125:8125/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  myapp:
    extends:
      file: docker-compose.yml
      service: myapp
    labels:
      com.datadoghq.tags.env: 'prod'
      com.datadoghq.tags.service: 'myapp'
      com.datadoghq.tags.version: '2.1'
      my.custom.label.team: 'myapp'
      com.datadoghq.ad.check_names: '["gunicorn"]'
      com.datadoghq.ad.init_configs: '[{}]'
        #com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":8000,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":8000}]'
      com.datadoghq.ad.logs: '[{"source": "gunicorn", "service": "myapp"}]'
      com.datadog.ad.proc_name: 'myapp'
  db:
    extends:
      file: docker-compose.yml
      service: db
    depends_on:
      - datadog-agent
    labels:
      com.datadoghq.ad.check_names: '["mysql"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":3306,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "mysql", "service": "db"}]'
  mock-elb:
    extends:
      file: docker-compose.yml
      service: mock-elb
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:80/nginx_status/"}]'
      com.datadoghq.ad.logs: '[{"source":"nginx","service":"mock-elb"}]'

volumes:
  dbdata:
